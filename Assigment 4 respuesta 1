import socket
import sys

def main():
   #if len(sys.argv) <= 1:
   #     print('Usage : "python ProxyServer.py server_ip"\n[server_ip : It is the IP Address Of Proxy Server')
    #    sys.exit(2)

    # Create a server socket, bind it to a port and start listening
    tcpSerSock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    tcpSerSock.bind(('', 10000))
    tcpSerSock.listen(5)

    while True:
        # Start receiving data from the client
        print('Ready to serve...')
        tcpCliSock, addr = tcpSerSock.accept()
        print('Received a connection from:', addr)
        message = tcpCliSock.recv(1024).decode()
        print(message)
        
        # Extract the filename from the given message
        print(message.split()[1])
        filename = message.split()[1].partition("/")[2]
        print(filename)
        fileExist = "false"
        filetouse = "/" + filename
        print(filetouse)
        
        try:
            # Check whether the file exist in the cache
            f = open(filetouse[1:], "r") 
            outputdata = f.readlines() 
            fileExist = "true"
            # ProxyServer finds a cache hit and generates a response message
            tcpCliSock.send("HTTP/1.0 200 OK\r\n".encode()) 
            tcpCliSock.send("Content-Type:text/html\r\n".encode())
            for i in range(len(outputdata)):
                tcpCliSock.send(outputdata[i].encode())
            print('Read from cache') 
        # Error handling for file not found in cache
        except IOError:
            if fileExist == "false": 
                # Create a socket on the proxyserver
                c = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                hostn = filename.replace("www.", "", 1) 
                print(hostn) 
                try:
                    # Connect to the socket to port 80
                    c.connect((hostn, 80))
                    # Create a temporary file on this socket and ask port 80 for the file requested by the client
                    fileobj = c.makefile('r', 0) 
                    fileobj.write("GET "+"http://" + filename + " HTTP/1.0\n\n".encode()) 
                    # Read the response into buffer
                    buffer = fileobj.readlines()
                    # Check if the response is a 404 Not Found
                    if b"404 Not Found" in buffer[0]:
                        tcpCliSock.send("HTTP/1.0 404 Not Found\r\n".encode())
                        tcpCliSock.send("Content-Type:text/html\r\n\r\n".encode())
                        tcpCliSock.send("<html><body><h1>404 Not Found</h1></body></html>\r\n".encode())
                    else:
                        # Create a new file in the cache for the requested file. Also send the response in the buffer to client socket and the corresponding file in the cache
                        tmpFile = open("./" + filename, "wb") 
                        for i in range(len(buffer)):
                            tmpFile.write(buffer[i].encode())
                            tcpCliSock.send(buffer[i].encode())
                except:
                    print("Illegal request") 
                else:
                    # Close the client and the server sockets 
                    tcpCliSock.close() 
    tcpSerSock.close()

if __name__ == "__main__":
    main()
